---
- name: "Ensure destination directories exist"
  ansible.builtin.file:
    path: "{{ services_monitoring_volumes_dir }}/{{ services_monitoring_service.name }}_config/_data/{{ service_monitoring_config.dst | default(service_monitoring_config.src) | dirname }}"
    state: directory
    owner: "{{ services_monitoring_service.name }}"
    group: "{{ services_monitoring_service.name }}"
    mode: '0755'
  when: "'configs' in services_monitoring_service"
  loop: "{{ services_monitoring_service.configs }}"
  loop_control:
    loop_var: service_monitoring_config
  become: true

- name: "Deploy {{ services_monitoring_service.name }} configuration"
  ansible.builtin.template:
    src: "{{ service_monitoring_config.src }}"
    dest: "{{ services_monitoring_volumes_dir }}/{{ services_monitoring_service.name }}_config/_data/{{ service_monitoring_config.dst | default(service_monitoring_config.src | replace('.j2', '')) }}"
    owner: "{{ services_monitoring_service.name }}"
    group: "{{ services_monitoring_service.name }}"
    mode: '0644'
  when: "'configs' in services_monitoring_service"
  loop: "{{ services_monitoring_service.configs }}"
  loop_control:
    loop_var: service_monitoring_config
  register: service_config
  become: true

- name: "Ensure the {{ services_monitoring_service.name }} service has been started"
  ansible.builtin.systemd:
    name: "{{ services_monitoring_service.name }}_podman.service"
    enabled: true
    state: started
  register: enable_systemd_service
  become: true

- name: "Restart {{ services_monitoring_service.name }} service"
  ansible.builtin.systemd:
    name: "{{ services_monitoring_service.name }}_podman.service"
    state: restarted
  register: restart_systemd_service
  when: service_config.changed and not enable_systemd_service.changed
  become: true

- name: Pause for 10 seconds for container to come up
  ansible.builtin.pause:
    seconds: 10
  when: |
    enable_systemd_service.changed
    or restart_systemd_service.changed
