---
- name: Build any provided containers
  ansible.builtin.include_tasks: build_image.yml
  loop: "{{ podman_pod_build_images if podman_pod_build_images != '' else [] }}"
  loop_control:
    loop_var: podman_pod_image_spec

- name: List pod configuration
  ansible.builtin.debug:
    msg: "{{ podman_pod_spec }}"

- name: Ensure dependencies are installed
  ansible.builtin.package:
    name:
      - podman
      - fuse-overlayfs
      - acl
    state: present
  become: true

- name: Create the Pod
  block:
    - name: Create the Podman Pod
      containers.podman.podman_pod:
        name: "{{ podman_pod_spec.name }}"
        ports: "{{ podman_pod_spec.ports }}"
        state: started
      become: true

    - name: Create the Pod's named volumes
      containers.podman.podman_volume:
        name: "{{ podman_pod_named_volume.name }}"
        state: present
      become: true
      loop: "{{ podman_pod_named_volumes | rejectattr('remote', 'defined') }}"
      loop_control:
        loop_var: podman_pod_named_volume

    - name: Create any remote volumes
      containers.podman.podman_volume:
        name: "{{ podman_pod_remote_volume.name }}"
        state: present
        driver: local
        options:
          - "type=nfs"
          - "o=nolock,hard,rw"
          - "device={{ podman_pod_remote_volume.remote }}"
      become: true
      loop: >-
        {{ podman_pod_named_volumes
          | selectattr('remote', 'defined')
          | list
          | unique(attribute='name')
        }}
      loop_control:
        loop_var: podman_pod_remote_volume

- name: Setup the individual containers
  ansible.builtin.include_tasks: container.yml
  loop: "{{ podman_pod_spec.containers }}"
  loop_control:
    loop_var: podman_pod_container
