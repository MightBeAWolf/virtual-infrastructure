---
- name: "Create the {{ podman_pod_container.name }} container user's group"
  ansible.builtin.user:
    name: "{{ podman_pod_container.name }}"
    system: true
    state: present
  become: true

- name: "Create the {{ podman_pod_container.name }} container user"
  ansible.builtin.user:
    name: "{{ podman_pod_container.name }}"
    group: "{{ podman_pod_container.name }}"
    system: true
    state: present
    password_lock: true
    password: '!' # Sets the password as a locked password
    generate_ssh_key: true
    ssh_key_file: .ssh/id_ed25519
    ssh_key_type: ed25519
  register: container_user
  become: true

- name: "Ensure the {{ podman_pod_container.name }} container host can ssh into the container"
  ansible.posix.authorized_key:
    user: "{{ container_user.name }}"
    state: present
    key: "{{ container_user.ssh_public_key }}"
  become: true

- name: "Create the {{ podman_pod_container.name }} container's systemd service file"
  ansible.builtin.template:
    src: podman.service.j2
    dest: /etc/systemd/system/{{ podman_pod_container.name }}_podman.service
    owner: root
    group: root
    mode: '0600'
  notify: Restart the container podman.service
  register: podman_pod_container_systemd_unit_file
  become: true

- name: Reload the Systemd Daemons
  ansible.builtin.systemd:
    name: "{{ podman_pod_container.name }}_podman.service"
    daemon_reload: true
  become: true
  when: podman_pod_container_systemd_unit_file.changed

