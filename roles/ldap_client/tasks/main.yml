- name: Check if the LDAP credentials are set and not empty
  ansible.builtin.assert:
    that:
      - lookup('env', 'OPENLDAP_SSSD_DN')
      - lookup('env', 'OPENLDAP_SSSD_DN_PASSWORD')
      - lookup('env', 'OPENLDAP_SSSD_DN') | length > 0
      - lookup('env', 'OPENLDAP_SSSD_DN_PASSWORD') | length > 0
    fail_msg: "The client SSSD LDAP credentials are not set in the environment.
      Did you use the ./run.sh wrapper?"

- name: Install LDAP Dependencies
  ansible.builtin.package:
    name: "{{ ldap_client_packages[ansible_distribution ~ '-' ~ ansible_distribution_major_version] }}"
    state: present
  become: true
  ignore_errors: true
  when: (ansible_distribution ~ '-' ~ ansible_distribution_major_version) in ldap_client_packages

- name: Check sssd directory permissions
  ansible.builtin.file:
    path: /etc/sssd
    state: directory
    owner: root
    group: root
    mode: '0700'
  become: true
  # Ensure that the ldap credentials have been set
  when: lookup('env', 'OPENLDAP_SSSD_DN') | length > 0
  notify: Restart sssd

- name: Configure SSS
  ansible.builtin.template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: '0600'
  become: true
  notify: Restart sssd

- name: Configure nsswitch.conf
  ansible.builtin.template:
    src: nsswitch.conf.j2
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  notify: Restart sssd

- name: Ensure services enabled and started
  ansible.builtin.systemd_service:
    name: "{{ ldap_client_systemd_service }}"
    enabled: true
    state: started
  become: true
  loop: "{{ ldap_client_services[ansible_distribution ~ '-' ~ ansible_distribution_major_version] }}"
  loop_control:
    loop_var: ldap_client_systemd_service

- name: Execute post-processing for distro
  ansible.builtin.include_tasks: "post-processing/{{ ansible_distribution }}\
    -{{ ansible_distribution_major_version }}.yml"
