---
- name: Use terraform from the control node
  delegate_to: localhost
  vars:
    build_dir: "{{ lookup('ansible.builtin.env', 'HOME') }}/.local/state/terraform/{{ role_path | basename }}/{{ inventory_hostname }}/{{ target_host }}"
  block:
    - name: Create local terraform project directory
      ansible.builtin.file:
        path: "{{ build_dir }}"
        mode: '0700'
        state: directory

    - name: Sync the terraform project configuration files
      ansible.builtin.copy:
        src: "terraform/"
        dest: "{{ build_dir }}"
        mode: 'preserve'

    - name: Configure the deployment variables
      ansible.builtin.template:
        src: "deployment.tfvars.j2"
        dest: "{{ build_dir }}/deployment.tfvars"
        mode: 'preserve'

    - name: Initialize the terraform with the project run script
      ansible.builtin.command:
        chdir: "{{ build_dir }}"
        argv:
          - "./run.sh"
          - "init"
        creates: "{{ build_dir }}/terraform.tfstate"
      register: terraform_init

    - name: Apply terraform with the project run script
      ansible.builtin.command:
        chdir: "{{ build_dir }}"
        argv:
          - "./run.sh"
          - "apply"
          - "-var-file=./deployment.tfvars"
          - "--auto-approve"
      register: terraform_apply
      changed_when: "'Apply complete! Resources: 0 added, 0 changed, 0 destroyed.' not in terraform_apply.stdout"

    - name: Sleep for 45 seconds while the machine comes up
      ansible.builtin.wait_for:
        timeout: 45
      delegate_to: localhost
      when: terraform_apply.changed

    - name: Add the deployed server's fingerprint known hosts
      ansible.builtin.known_hosts:
        key: "{{ lookup('pipe', 'ssh-keyscan -t ed25519 {{ ansible_host }}') }}"
        name: "{{ ansible_host }}"
        path: ~/.ssh/known_hosts
      delegate_to: localhost
      connection: local
      when: terraform_apply.changed

- name: Add Ansible control node's user public SSH key to a host
  remote_user: "{{ lookup('env', 'PROXMOX_VM_TEMPLATE_USER') }}"
  block:
    - name: Ensure deployed VMs are reachable
      ansible.builtin.wait_for_connection:
        timeout: 300

    - name: Ensure the deploy user has a .ssh directory
      ansible.builtin.file:
        path: "/home/{{ ansible_user | default(lookup('env', 'USER')) }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user | default(lookup('env', 'USER')) }}"
        group: "{{ ansible_user | default(lookup('env', 'USER')) }}"
      become: true

    - name: Add control node's user public SSH key to authorized_keys
      ansible.posix.authorized_key:
        user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
        key: "{{ lookup('env', 'SSH_PUB_KEY') }}"
      become: true
