---
- name: Call the podman_pod roll
  ansible.builtin.include_role:
    name: podman_pod
  vars:
    podman_pod_build_images: "{{ services_openldap_podman_build_images }}"
    podman_pod_build_files:
      - sudo.schema
    podman_pod_spec:
      name: "{{ services_openldap_container_name }}_pod"
      ports: "{{ services_openldap_container_ports }}"
      containers: "{{ services_openldap_container_spec }}"

- name: Create the openldap config directory
  ansible.builtin.file:
    path: /etc/openldap
    state: directory
    owner: "{{ services_openldap_container_name }}"
    group: "{{ services_openldap_container_name }}"
    mode: '0600'
  become: true

- name: Create openldap Configuration
  ansible.builtin.template:
    src: "{{ services_openldap_config_file }}"
    dest: "/etc/openldap/{{ services_openldap_config_file | basename | regex_replace('\\.j2$') }}"
    owner: "{{ services_openldap_container_name }}"
    group: "{{ services_openldap_container_name }}"
    mode: '0600'
  with_fileglob: "{{ role_path }}/templates/ldap.conf.d/*.j2"
  loop_control:
    loop_var: services_openldap_config_file
  register: configs
  become: true

- name: "Ensure the openldap services have been started"
  ansible.builtin.systemd:
    name: "{{ services_openldap_service }}"
    enabled: true
    state: started
  loop:
    - "{{ services_openldap_container_name }}_podman.service"
  loop_control:
    loop_var: services_openldap_service
  register: enable_systemd_service
  when: not (configs.changed)
  become: true

- name: "Restart the openldap services"
  ansible.builtin.systemd:
    name: "{{ services_openldap_service }}"
    enabled: true
    state: restarted
  loop:
    - "{{ services_openldap_container_name }}_podman.service"
  loop_control:
    loop_var: services_openldap_service
  register: restart_systemd_service
  when: configs.changed
  become: true

- name: Pause for 10 seconds for container to come up
  ansible.builtin.pause:
    seconds: 10
  when: enable_systemd_service.changed or restart_systemd_service.changed
