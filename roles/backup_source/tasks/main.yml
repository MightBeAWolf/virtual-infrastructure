---
- name: Install dependencies
  block:
    - name: Install package dependencies
      ansible.builtin.include_tasks: "dependencies/\
        {{ ansible_distribution }}\
        -{{ ansible_distribution_major_version }}.yml"

- name: Backupsys user setup
  # Ignore errors so that even if the backups fail to setup we can still deploy
  # services
  ignore_errors: true
  block:
    - name: Enable the bacupsys user
      ansible.builtin.user:
        name: backupsys
        create_home: true
        local: false
        system: true
        generate_ssh_key: true
        ssh_key_type: ed25519
        ssh_key_file: ~backupsys/.ssh/id_ed25519
        ssh_key_passphrase: "{{ lookup('env', 'BACKUPSYS_SSH_PASSPHRASE') }}"
      become: true
      register: backupsys_user_info

    - name: Authorized the Backupsys user to upload to the backup server
      delegate_to: "{{ lookup('env', 'BACKUP_SERVER_IPV4') }}"
      ansible.posix.authorized_key:
        user: backupsys
        key: "{{ backupsys_user_info.ssh_public_key }}"
        key_options: "command=\"internal-sftp\",\
          no-agent-forwarding,\
          no-port-forwarding,\
          no-pty,\
          no-user-rc,\
          no-X11-forwarding"
        exclusive: false
      ignore_errors: true
      become: true

    - name: Add the backup server's fingerprint to the known hosts
      ansible.builtin.known_hosts:
        key: "{{ lookup('env', 'BACKUP_SERVER_FINGERPRINT') }}"
        name: "{{ lookup('env', 'BACKUP_SERVER_IPV4') }}"
        path: ~backupsys/.ssh/known_hosts
      become_user: backupsys
      become: true

- name: Install Restic
  block:
    - name: Create Backupsys Binary Directory
      ansible.builtin.file:
        path: ~backupsys/bin
        state: directory
        owner: backupsys
        group: backupsys
        mode: '0700'
      become: true

    - name: Install Restic
      ansible.builtin.script: install-restic.sh
      args:
        creates: "{{ backupsys_user_info.home }}/bin/restic"
      become: true

    - name: Define restic's executable permissions
      ansible.builtin.file:
        path: ~backupsys/bin/restic
        owner: root
        group: backupsys
        mode: '0750'
      become: true

- name: Install the backup policy kit management framework
  block:
    - name: Allow cloning from repositories with self signed SSL
      community.general.git_config:
        name: http.sslVerify
        scope: global
        value: false
      become: true

    - name: Clone the backup utility repository # noqa: latest
      ansible.builtin.git:
        repo: https://gitea.sti.com/STI/backup-config.git
        dest: /backups
        depth: 1
      become: true

    - name: Install the Systemd components
      ansible.builtin.template:
        src: "{{ backup_source_systemd_template }}"
        dest: "/etc/systemd/system/{{ backup_source_systemd_template \
          | basename \
          | regex_replace('.j2', '') }}"
        owner: root
        group: root
        mode: '0600'
      with_fileglob:
        - "templates/systemd/*.j2"
      loop_control:
        loop_var: backup_source_systemd_template
      notify:
        - Perform Systemd daemon reload
      become: true
